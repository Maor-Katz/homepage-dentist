app:
import React from 'react';
import EmployersTable from './EmployersTable';
import './App.css';

function App() {
  return (
    <div className="App">
<h1 className='title'>This is our Squad</h1>
        <EmployersTable/>
    </div>
  );
}

export default App;


EmployersTable

import React from "react";
import AddIcon from '@material-ui/icons/Add';
import Fab from '@material-ui/core/Fab';
import Icon from '@material-ui/core/Icon';
import DeleteIcon from '@material-ui/icons/Delete';
import Modal from 'react-modal';
import Button from '@material-ui/core/Button';

export class EmployersTable extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            personsList: [],
            modalIsOpen: false,
            values: {
                title: '',
                description: '',
                price: '',
                id: '',
            },
            personOnModal: {},
            newPerson: false,
        }
        this.customStyles = {
            content: {
                top: '50%',
                width: '20%',
                height: '30%',
                left: '50%',
                right: 'auto',
                bottom: 'auto',
                marginRight: '-50%',
                transform: 'translate(-50%, -50%)'
            }
        };
    }

    addPerson = () => {
        const {personsList, values, newPerson} = this.state
        personsList.push(values);
        this.setState({personsList, newPerson: false})
    }
    deletePerson = (personId) => {
        const {personsList} = this.state;
        const newList= personsList.filter(person => {
            if (person.id === personId)
                return false
            else
            return true
        })
        this.setState({personsList: newList})
    }

    handleChange = (event, field) => {
        const {values} = this.state;
        values[field] = event.target.value
        this.setState({values})
    }
    savePerson = () => {
        const {values, personOnModal, personsList, newPerson} = this.state
        if (!newPerson) {
            if (!values['id']) {
                values['id'] = personOnModal.id
            }
            if (!values['description']) {
                values['description'] = personOnModal.description
            }
            if (!values['price']) {
                values['price'] = personOnModal.price
            }
            if (!values['title']) {
                values['title'] = personOnModal.title
            }
            var newPersonList = personsList.map(person => {
                if (person.id === personOnModal.id) {
                    person = values
                }
                return person
            })
            this.setState({personsList: newPersonList})
        }
        else {
            this.addPerson()
        }
    }

    componentDidMount() {
        const {personsList} = this.state
        fetch('personsfile.json')
            .then(res => res.json())
            .then(data => {
                const x = personsList.concat(data.products)
                this.setState({personsList: x})
            })
    }

    render() {
        const {personsList, modalIsOpen, personOnModal} = this.state
        debugger
        return (
            <div className="employersTable">
                <div className='titleOfTable'>
                    <div className='titleTitle'>Employe's title</div>
                    <div className='descriptionTitle'>Description</div>
                    <div className='priceTitle'>Price</div>
                    <div className='idTitle'>Employe's id</div>
                    <div className='editAndRemoveTitle'>Edit/Remove</div>
                </div>
                {personsList && <div className='table'>
                    {personsList.map(person => {
                        return <div className='person'>
                            <div className='titlePerson'>{person.title}</div>
                            <div className='descriptionPerson'>{person.description}</div>
                            <div className='pricePerson'>{person.price}</div>
                            <div className='idPerson'>{person.id}</div>
                            <div className='editAndRemovePerson'><Fab color="primary" aria-label="Edit" size='small'
                                                                      onClick={() => {
                                                                          this.setState({
                                                                              modalIsOpen: true,
                                                                              personOnModal: person
                                                                          })
                                                                      }}>
                                <Icon>edit_icon</Icon>
                            </Fab> <Fab aria-label="Delete" size='small' className='removeButton' onClick={() => {
                                this.deletePerson(person.id)
                            }}>
                                <DeleteIcon/>
                            </Fab></div>
                        </div>
                    })}
                </div>}
                <div><Fab color="primary" aria-label="Add" className='addButton' onClick={() => {
                    this.setState({modalIsOpen: true, newPerson: true})
                    this.addPerson()
                }}>
                    <AddIcon/>
                </Fab></div>
                <Modal
                    isOpen={modalIsOpen}
                    onAfterOpen={this.afterOpenModal}
                    style={this.customStyles}
                    contentLabel="Example Modal">
                    <form name="myForm" className='modalForm'>
                        <div className='titleModal'>Title: <input defaultValue={personOnModal.title} type="text"
                                                                  name="fname" onChange={(e) => {
                            this.handleChange(e, 'title')
                        }}/></div>
                        <div className='descModal'>Description: <input defaultValue={personOnModal.description}
                                                                       type="text" name="fname" onChange={(e) => {
                            this.handleChange(e, 'description')
                        }}/></div>
                        <div className='priceModal'>Price: <input defaultValue={personOnModal.price} type="text"
                                                                  name="fname" onChange={(e) => {
                            this.handleChange(e, 'price')
                        }}/></div>
                        <div className='idModal'>Id: <input defaultValue={personOnModal.id} type="number" name="fname"
                                                            onChange={(e) => {
                                                                this.handleChange(e, 'id')
                                                            }}/></div>

                    </form>
                    <div className='modalButtons'>
                        <Button variant="contained" color="secondary" onClick={() => {
                            this.setState({modalIsOpen: false, personOnModal: {},})
                        }}>
                            Discard
                        </Button>
                        <Button variant="contained" color="secondary" onClick={() => {

                            this.savePerson()
                            this.setState({
                                modalIsOpen: false, values: {
                                    title: '',
                                    description: '',
                                    price: '',
                                    id: '',
                                },
                                personOnModal: {}
                            })
                        }}>
                            Save
                        </Button>
                    </div>
                </Modal>
            </div>
        );
    }
}

export default EmployersTable

App.css

.App {
  text-align: center;
}
.title{
  color: cornflowerblue;
  font-weight: bold;
  font-size: 45px;
  font-family: arial, helvetica;
  width: 600px;
  margin: 50px auto;
  text-align: center;
}
.titleOfTable{display: flex;}
.titleTitle{flex: 1;background-color: black;color: #fff;font-weight: bold;padding: 10px;}
.descriptionTitle{flex: 1;background-color: black;color: #fff;font-weight: bold;padding: 10px;}
.priceTitle{flex: 1;background-color: black;color: #fff;font-weight: bold;padding: 10px;}
.idTitle{flex: 1;background-color: black;color: #fff;font-weight: bold;padding: 10px;}
.editAndRemoveTitle{flex:0.5;background-color: black;color: #fff; font-weight: bold;padding: 10px;}

.person{display: flex;}

.titlePerson{flex: 1;border-style: groove;}.descriptionPerson{flex: 1;border-style: groove;} .pricePerson{flex: 1;border-style: groove;} .idPerson{flex: 1;border-style: groove;} .editAndRemovePerson{flex:0.5;border-style: groove;}
.removeButton:hover{cursor: pointer;}
.addButton{text-align: center}
.modalForm{text-align: center; line-height: 35px; font-weight: bold; font-size: 18px;}
.modalButtons{text-align: center; margin-top: 45px;}
